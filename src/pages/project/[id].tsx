import Header from "@/components/Header"
import { EachProjectData } from "@/datas";
import Head from "next/head"
import { useRouter } from "next/router"

const ProjectDetail = () => {
    const router = useRouter();
    const props = router.query;
    const id = Number(props.id);

    if (!id) {
        return <div>Loading</div>;
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="project_details">
                <Header />
                
                <div className="top">
                    <h1>{EachProjectData[id-1].title}</h1>
                    <div className="subtitle">{EachProjectData[id-1].subtitle}</div>
                    <video width="1000px" poster={EachProjectData[id-1].poster} controls>
                        <source src={EachProjectData[id-1].video} type="video/mp4" />
                    </video>
                </div>

                <section className="about">
                    <div className="title">About the project.</div>
                    <div className="text">
                        <p>This web is used to save archive documents of all lecturers at Informatics Department, Hasanuddin University. Lecturers can see, upload, edit, and delete their documents,  so as the admin. Some data menu implements OCR feature and use the text extracted to automatically fill the form (the research title, year, teams, etc). This makes the user need not type the whole thing themselves while still make it customizable to them.</p> 
                        <p>Another special feature is CV generator. Here, user can generate their CV easily based on the data they have in this system. The CV is produced in .docx format, allowing the user to customize it more to their preferences. The CV generator feature along with (Laravel) backend were developed by my partner.</p>
                    </div>
                </section>

                <section className="stacks">
                    <div className="title">Stacks I used<span>.</span></div>
                    <div className="texts">
                        <div>Front-end : React-Next JS, TypeScript</div>
                        <div>Back-end (OCR) : Flask, Python, Tesseract</div>
                    </div>
                </section>
            </main>
        </>
    )
}

export default ProjectDetail